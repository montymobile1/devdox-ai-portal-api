name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12  # or your actual version
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          pip install coverage

      - name: Build Docker image
        run: docker build -t testnew:latest .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
            image-ref: testnew:latest
            format: 'table'
            exit-code: '1'  # Fail the build if vulnerabilities found

      - name: Run tests and generate coverage
        run: |
          coverage run -m pytest tests
          coverage xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  version-bump:

      name: Bump Version

      runs-on: ubuntu-latest

      needs: sonarqube

      if: github.ref == 'refs/heads/main'

      steps:

        - uses: actions/checkout@v4



        - name: Bump patch version

          run: |
  
            FILE="version.py"
  
            VERSION=$(grep -oP '__version__\s*=\s*"\K[0-9]\.[0-9]\.[0-9]' "$FILE")
            if [ -z "$VERSION" ]; then
              echo "Error: Could not extract version from $FILE"
              exit 1
            fi
  
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
  
            PATCH=$((PATCH   1))
  
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
  
            echo "Updating version to $NEW_VERSION"
  
            sed -i "s/__version__ = \".*\"/__version__ = \"$NEW_VERSION\"/" "$FILE"
  
            git config user.name "Hayat55"
  
            git config user.email "hayat.bourgi@montyholding.com"
  
            git add "$FILE"
  
            git commit -m "ci: bump version to $NEW_VERSION"
  
            git push origin main

          env:

            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # requires a PAT with repo write access

